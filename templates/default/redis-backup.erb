#!/usr/bin/env python

'''
Backup redis aof & rdb file to s3
'''

import boto.s3.connection
import os
import platform
import re
import signal                                                                        
import subprocess                                                                    
import sys
import time
from boto.s3.key import Key
from boto.exception import S3ResponseError 

if __name__ == '__main__':
    bucket_name = "<%= node[:redis][:backup_s3_bucket] %>" 
    port = 6379
    
    db_dir = "<%= node[:redis][:db_dir] %>" 

    node = platform.node().replace('.', '-')

    day = time.strftime("%Y-%m-%d")
    fname = "neondbbackup_%d" % (int(time.time()))

    conn = boto.s3.connection.S3Connection()                                         
    bucket = conn.get_bucket(bucket_name)                                            
    k = Key(bucket)                                                                  
    k.name = "%s/%s.tar.gz" % (day, fname)

    cmd = "tar cvzf %s/%s.tar.gz %s/*.aof %s/*.rdb >/dev/null" %(
            db_dir, fname, db_dir, db_dir)
    
    p = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE)
    p.wait()
    
    # Upload to S3
    tarfile = "%s/%s.tar.gz" % (db_dir, fname)
    ret = k.set_contents_from_filename(tarfile)
    if ret > 0:
        print "Uploaded backup %s to S3" % tarfile
    # Verify the upload/ checksum ?                                                  
    # Delete the local tar ball
    os.remove(tarfile)
